// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphQL documents generation tests for introspection schema input should generate GraphQL documents for schema 1`] = `
Map {
  "hero" => "
query Hero 
  (
      $episode:Episode
  )
{
  hero
  (
      episode:$episode
  )
 
   {
    
    id
    name
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
    
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
  }
}
",
  "reviews" => "
query Reviews 
  (
      $episode:Episode!
  )
{
  reviews
  (
      episode:$episode
  )
 
   {
    
    episode
    stars
    commentary
    
  }
}
",
  "search" => "
query Search 
  (
      $text:String
  )
{
  search
  (
      text:$text
  )
 
   {
    
    
    ...on Human {
      
    id
    name
    homePlanet
    height
    mass
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    id
    name
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
    primaryFunction
    }
    ...on Starship {
      
    id
    name
    length
    coordinates
    }
  }
}
",
  "character" => "
query Character 
  (
      $id:ID!
  )
{
  character
  (
      id:$id
  )
 
   {
    
    id
    name
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
    
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
  }
}
",
  "droid" => "
query Droid 
  (
      $id:ID!
  )
{
  droid
  (
      id:$id
  )
 
   {
    
    id
    name
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
    primaryFunction
    
  }
}
",
  "human" => "
query Human 
  (
      $id:ID!
  )
{
  human
  (
      id:$id
  )
 
   {
    
    id
    name
    homePlanet
    height
    mass
      friends {
        
    id
    name
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
        
      }
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
      starships {
        
    id
    name
    length
    coordinates
        
      }
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      friendsConnection {
        
    totalCount
      edges {
        
    cursor
        
      }
      friends {
        
    id
    name
    appearsIn
        
    ...on Human {
      
    homePlanet
    height
    mass
    }
    ...on Droid {
      
    primaryFunction
    }
      }
      pageInfo {
        
    startCursor
    endCursor
    hasNextPage
        
      }
        
      }
    appearsIn
      starships {
        
    id
    name
    length
    coordinates
        
      }
    
  }
}
",
  "starship" => "
query Starship 
  (
      $id:ID!
  )
{
  starship
  (
      id:$id
  )
 
   {
    
    id
    name
    length
    coordinates
    
  }
}
",
}
`;

exports[`GraphQL documents generation tests for introspection schema input should generate GraphQL documents for schema 2`] = `
Map {
  "createReview" => "
mutation CreateReview 
  (
      $episode:Episode,
      $review:ReviewInput!
  )
{
  createReview
  (
      episode:$episode,
      review:$review
  )
 
   {
    
    episode
    stars
    commentary
    
  }
}
",
}
`;

exports[`GraphQL documents generation tests for introspection schema input should generate GraphQL documents for schema 3`] = `
Map {
  "reviewAdded" => "
subscription ReviewAdded 
  (
      $episode:Episode
  )
{
  reviewAdded
  (
      episode:$episode
  )
 
   {
    
    episode
    stars
    commentary
    
  }
}
",
}
`;

exports[`end 2 end tests to test if the case style is retained for type names should generate statements 1`] = `
Map {
  "getUPPERCASE" => "
query GetUPPERCASE 
  (
      $id:ID!
  )
{
  getUPPERCASE
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listUPPERCASEs" => "
query ListUPPERCASEs 
  (
      $filter:ModelUPPERCASEFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listUPPERCASEs
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "getLowercase" => "
query GetLowercase 
  (
      $id:ID!
  )
{
  getLowercase
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listLowercases" => "
query ListLowercases 
  (
      $filter:ModellowercaseFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listLowercases
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "getCamelCase" => "
query GetCamelCase 
  (
      $id:ID!
  )
{
  getCamelCase
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listCamelCases" => "
query ListCamelCases 
  (
      $filter:ModelcamelCaseFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listCamelCases
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "getPascalCase" => "
query GetPascalCase 
  (
      $id:ID!
  )
{
  getPascalCase
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listPascalCases" => "
query ListPascalCases 
  (
      $filter:ModelPascalCaseFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listPascalCases
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "getSnake_case" => "
query GetSnake_case 
  (
      $id:ID!
  )
{
  getSnake_case
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listSnake_cases" => "
query ListSnake_cases 
  (
      $filter:Modelsnake_caseFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listSnake_cases
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "getUPPER_SNAKE_CASE" => "
query GetUPPER_SNAKE_CASE 
  (
      $id:ID!
  )
{
  getUPPER_SNAKE_CASE
  (
      id:$id
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "listUPPER_SNAKE_CASEs" => "
query ListUPPER_SNAKE_CASEs 
  (
      $filter:ModelUPPER_SNAKE_CASEFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  listUPPER_SNAKE_CASEs
  (
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
  "queryByOwner" => "
query QueryByOwner 
  (
      $owner:String,
      $sortDirection:ModelSortDirection,
      $filter:ModelUPPERCASEFilterInput,
      $limit:Int,
      $nextToken:String
  )
{
  queryByOwner
  (
      owner:$owner,
      sortDirection:$sortDirection,
      filter:$filter,
      limit:$limit,
      nextToken:$nextToken
  )
 
   {
    
      items {
        
    id
    owner
    createdAt
    updatedAt
        
      }
    nextToken
    
  }
}
",
}
`;

exports[`end 2 end tests to test if the case style is retained for type names should generate statements 2`] = `
Map {
  "createUPPERCASE" => "
mutation CreateUPPERCASE 
  (
      $input:CreateUPPERCASEInput!,
      $condition:ModelUPPERCASEConditionInput
  )
{
  createUPPERCASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updateUPPERCASE" => "
mutation UpdateUPPERCASE 
  (
      $input:UpdateUPPERCASEInput!,
      $condition:ModelUPPERCASEConditionInput
  )
{
  updateUPPERCASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deleteUPPERCASE" => "
mutation DeleteUPPERCASE 
  (
      $input:DeleteUPPERCASEInput!,
      $condition:ModelUPPERCASEConditionInput
  )
{
  deleteUPPERCASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "createLowercase" => "
mutation CreateLowercase 
  (
      $input:CreateLowercaseInput!,
      $condition:ModellowercaseConditionInput
  )
{
  createLowercase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updateLowercase" => "
mutation UpdateLowercase 
  (
      $input:UpdateLowercaseInput!,
      $condition:ModellowercaseConditionInput
  )
{
  updateLowercase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deleteLowercase" => "
mutation DeleteLowercase 
  (
      $input:DeleteLowercaseInput!,
      $condition:ModellowercaseConditionInput
  )
{
  deleteLowercase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "createCamelCase" => "
mutation CreateCamelCase 
  (
      $input:CreateCamelCaseInput!,
      $condition:ModelcamelCaseConditionInput
  )
{
  createCamelCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updateCamelCase" => "
mutation UpdateCamelCase 
  (
      $input:UpdateCamelCaseInput!,
      $condition:ModelcamelCaseConditionInput
  )
{
  updateCamelCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deleteCamelCase" => "
mutation DeleteCamelCase 
  (
      $input:DeleteCamelCaseInput!,
      $condition:ModelcamelCaseConditionInput
  )
{
  deleteCamelCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "createPascalCase" => "
mutation CreatePascalCase 
  (
      $input:CreatePascalCaseInput!,
      $condition:ModelPascalCaseConditionInput
  )
{
  createPascalCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updatePascalCase" => "
mutation UpdatePascalCase 
  (
      $input:UpdatePascalCaseInput!,
      $condition:ModelPascalCaseConditionInput
  )
{
  updatePascalCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deletePascalCase" => "
mutation DeletePascalCase 
  (
      $input:DeletePascalCaseInput!,
      $condition:ModelPascalCaseConditionInput
  )
{
  deletePascalCase
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "createSnake_case" => "
mutation CreateSnake_case 
  (
      $input:CreateSnake_caseInput!,
      $condition:Modelsnake_caseConditionInput
  )
{
  createSnake_case
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updateSnake_case" => "
mutation UpdateSnake_case 
  (
      $input:UpdateSnake_caseInput!,
      $condition:Modelsnake_caseConditionInput
  )
{
  updateSnake_case
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deleteSnake_case" => "
mutation DeleteSnake_case 
  (
      $input:DeleteSnake_caseInput!,
      $condition:Modelsnake_caseConditionInput
  )
{
  deleteSnake_case
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "createUPPER_SNAKE_CASE" => "
mutation CreateUPPER_SNAKE_CASE 
  (
      $input:CreateUPPER_SNAKE_CASEInput!,
      $condition:ModelUPPER_SNAKE_CASEConditionInput
  )
{
  createUPPER_SNAKE_CASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "updateUPPER_SNAKE_CASE" => "
mutation UpdateUPPER_SNAKE_CASE 
  (
      $input:UpdateUPPER_SNAKE_CASEInput!,
      $condition:ModelUPPER_SNAKE_CASEConditionInput
  )
{
  updateUPPER_SNAKE_CASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "deleteUPPER_SNAKE_CASE" => "
mutation DeleteUPPER_SNAKE_CASE 
  (
      $input:DeleteUPPER_SNAKE_CASEInput!,
      $condition:ModelUPPER_SNAKE_CASEConditionInput
  )
{
  deleteUPPER_SNAKE_CASE
  (
      input:$input,
      condition:$condition
  )
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
}
`;

exports[`end 2 end tests to test if the case style is retained for type names should generate statements 3`] = `
Map {
  "onCreateUPPERCASE" => "
subscription OnCreateUPPERCASE 
{
  onCreateUPPERCASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdateUPPERCASE" => "
subscription OnUpdateUPPERCASE 
{
  onUpdateUPPERCASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeleteUPPERCASE" => "
subscription OnDeleteUPPERCASE 
{
  onDeleteUPPERCASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onCreateLowercase" => "
subscription OnCreateLowercase 
{
  onCreateLowercase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdateLowercase" => "
subscription OnUpdateLowercase 
{
  onUpdateLowercase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeleteLowercase" => "
subscription OnDeleteLowercase 
{
  onDeleteLowercase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onCreateCamelCase" => "
subscription OnCreateCamelCase 
{
  onCreateCamelCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdateCamelCase" => "
subscription OnUpdateCamelCase 
{
  onUpdateCamelCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeleteCamelCase" => "
subscription OnDeleteCamelCase 
{
  onDeleteCamelCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onCreatePascalCase" => "
subscription OnCreatePascalCase 
{
  onCreatePascalCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdatePascalCase" => "
subscription OnUpdatePascalCase 
{
  onUpdatePascalCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeletePascalCase" => "
subscription OnDeletePascalCase 
{
  onDeletePascalCase
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onCreateSnake_case" => "
subscription OnCreateSnake_case 
{
  onCreateSnake_case
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdateSnake_case" => "
subscription OnUpdateSnake_case 
{
  onUpdateSnake_case
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeleteSnake_case" => "
subscription OnDeleteSnake_case 
{
  onDeleteSnake_case
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onCreateUPPER_SNAKE_CASE" => "
subscription OnCreateUPPER_SNAKE_CASE 
{
  onCreateUPPER_SNAKE_CASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onUpdateUPPER_SNAKE_CASE" => "
subscription OnUpdateUPPER_SNAKE_CASE 
{
  onUpdateUPPER_SNAKE_CASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
  "onDeleteUPPER_SNAKE_CASE" => "
subscription OnDeleteUPPER_SNAKE_CASE 
{
  onDeleteUPPER_SNAKE_CASE
 
   {
    
    id
    owner
    createdAt
    updatedAt
    
  }
}
",
}
`;
